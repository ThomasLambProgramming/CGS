from the looks of things making a gpu linker module for the node creation is not viable as the amount of memory that has to go inbetween
the gpu and cpu would eb too much and would lag anyway, and the abstracted memory would not be worth it as there would be issues trying to link the nodes together in the 
gpu from the first place

making every node was not worth it, it was better to do a overlap check in the objects loop first, then check it against the list rather than adding all together then checking
recursion was also not worth it as it turned the time to o^n rather than on^2 as it had to restart the loop for each time the list was modified, this was improved
by making a second list that would have every node to delete then removing them from the node list after the whole loop is done.

I solved the problem of getting alot of distance checks for the checking of nodes underneath eachother by using a dot product check on the negative nodes normal and the 
direction of the node to the other (its still one distance check (as its a normalized vector and has to find the c^2 anyway))
